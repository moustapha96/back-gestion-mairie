# security:
#     enable_authenticator_manager: true

#     password_hashers:
#         Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

#     providers:
#         users:
#             entity:
#                 class: App\Entity\User
#                 property: email
#         # used to reload user from session & other features (e.g. switch_user)
#         app_user_provider:
#             entity:
#                 class: App\Entity\User
#                 property: email
#     firewalls:
#         dev:
#             pattern: ^/(_(profiler|wdt)|css|images|js)/
#             security: false

#         main:
#             lazy: true
#             provider: users
#             form_login:
#                 login_path: app_login
#                 check_path: app_login
#             logout:
#                 path: app_logout
#         api:
#             pattern: ^/api
#             stateless: true

#     access_control:
#         - { path: ^/$, roles: PUBLIC_ACCESS }
#         - { path: /api/login, roles: PUBLIC_ACCESS }
#         - { path: ^/api, roles: PUBLIC_ACCESS }

# when@test:
#     security:
#         password_hashers:
#             Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
#                 algorithm: auto
#                 cost: 4 # Lowest possible value for bcrypt
#                 time_cost: 3 # Lowest possible value for argon
#                 memory_cost: 10 # Lowest possible value for argon


security:
    enable_authenticator_manager: true

    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        users:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern: ^/api/login
            stateless: true
            provider: users
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            provider: users
            jwt: ~

    access_control:
        - { path: ^/$, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: PUBLIC_ACCESS }
        - { path: ^/api/doc, roles: PUBLIC_ACCESS }
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/users/update-activated-status, roles: PUBLIC_ACCESS }
        - { path: ^/api/users/activated-account, roles: PUBLIC_ACCESS }
        - { path: ^/api/users/create, roles: PUBLIC_ACCESS }
        - { path: ^/api/password-reset, roles: PUBLIC_ACCESS }
        - { path: ^/api/password-reset/new, roles: PUBLIC_ACCESS }
        - { path: ^/api/configurations/liste-simple, roles: PUBLIC_ACCESS }
        - { path: ^/encrypt, roles: PUBLIC_ACCESS }
        - { path: ^/decrypt, roles: PUBLIC_ACCESS }
        - { path: ^/api/logout, roles: IS_AUTHENTICATED_FULLY }
          
    role_hierarchy:
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        ROLE_ADMIN: ROLE_ADMIN
        ROLE_AGENT: ROLE_AGENT
        ROLE_DEMANDEUR: ROLE_DEMANDEUR

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
